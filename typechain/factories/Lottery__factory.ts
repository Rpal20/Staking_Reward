/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { Lottery } from "../Lottery";

export class Lottery__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Lottery> {
    return super.deploy(overrides || {}) as Promise<Lottery>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Lottery {
    return super.attach(address) as Lottery;
  }
  connect(signer: Signer): Lottery__factory {
    return super.connect(signer) as Lottery__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Lottery {
    return new Contract(address, _abi, signerOrProvider) as Lottery;
  }
}

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "enter",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getPlayers",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "manager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pickWinner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "players",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061085d806100606000396000f3fe60806040526004361061004a5760003560e01c8063481c6a751461004f5780635d495aea1461007a5780638b5b9ccc14610091578063e97dcb62146100bc578063f71d96cb146100c6575b600080fd5b34801561005b57600080fd5b50610064610103565b60405161007191906105ff565b60405180910390f35b34801561008657600080fd5b5061008f610127565b005b34801561009d57600080fd5b506100a661022b565b6040516100b3919061061a565b60405180910390f35b6100c46102b9565b005b3480156100d257600080fd5b506100ed60048036038101906100e89190610462565b610331565b6040516100fa91906105ff565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600180549050610137610370565b610141919061072d565b9050600181815481106101575761015661078d565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156101c7573d6000803e3d6000fd5b50600067ffffffffffffffff8111156101e3576101e26107bc565b5b6040519080825280602002602001820160405280156102115781602001602082028036833780820191505090505b50600190805190602001906102279291906103a6565b5050565b606060018054806020026020016040519081016040528092919081815260200182805480156102af57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610265575b5050505050905090565b662386f26fc1000034116102cc57600080fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6001818154811061034157600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600044426001604051602001610388939291906105c6565b6040516020818303038152906040528051906020012060001c905090565b82805482825590600052602060002090810192821561041f579160200282015b8281111561041e5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906103c6565b5b50905061042c9190610430565b5090565b5b80821115610449576000816000905550600101610431565b5090565b60008135905061045c81610810565b92915050565b600060208284031215610478576104776107fe565b5b60006104868482850161044d565b91505092915050565b600061049b83836104bf565b60208301905092915050565b60006104b383836104dd565b60208301905092915050565b6104c8816106cd565b82525050565b6104d7816106cd565b82525050565b6104e6816106cd565b82525050565b60006104f782610661565b6105018185610691565b935061050c8361063c565b8060005b8381101561053d578151610524888261048f565b975061052f83610677565b925050600181019050610510565b5085935050505092915050565b60006105558261066c565b61055f81856106a2565b935061056a8361064c565b8060005b838110156105a25761057f826107eb565b61058988826104a7565b975061059483610684565b92505060018101905061056e565b5085935050505092915050565b6105c06105bb826106ff565b610723565b82525050565b60006105d282866105af565b6020820191506105e282856105af565b6020820191506105f2828461054a565b9150819050949350505050565b600060208201905061061460008301846104ce565b92915050565b6000602082019050818103600083015261063481846104ec565b905092915050565b6000819050602082019050919050565b60008190508160005260206000209050919050565b600081519050919050565b600081549050919050565b6000602082019050919050565b6000600182019050919050565b600082825260208201905092915050565b600081905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006106d8826106df565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061071c61071783610803565b6106ad565b9050919050565b6000819050919050565b6000610738826106ff565b9150610743836106ff565b9250826107535761075261075e565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60006107f78254610709565b9050919050565b600080fd5b60008160001c9050919050565b610819816106ff565b811461082457600080fd5b5056fea264697066735822122065af0292399dad18df99c3bfb21e196c4ed848800602c383ea6d117013e68a6b64736f6c63430008070033";
